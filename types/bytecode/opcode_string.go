// Code generated by "stringer -type OpCode bytecode.go"; DO NOT EDIT.

package bytecode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NOP-0]
	_ = x[PUSH-1]
	_ = x[POP-2]
	_ = x[MOV-3]
	_ = x[ADD-4]
	_ = x[SUB-5]
	_ = x[MUL-6]
	_ = x[DIV-7]
	_ = x[MOD-8]
	_ = x[NOT-9]
	_ = x[AND-10]
	_ = x[OR-11]
	_ = x[LT-12]
	_ = x[GT-13]
	_ = x[LE-14]
	_ = x[GE-15]
	_ = x[EQ-16]
	_ = x[NE-17]
	_ = x[LSH-18]
	_ = x[RSH-19]
	_ = x[IX1-20]
	_ = x[IX2-21]
	_ = x[LEN-22]
	_ = x[ARR-23]
	_ = x[JMP-24]
	_ = x[JMPF-25]
	_ = x[FUNC-26]
	_ = x[CALL-27]
	_ = x[RET-28]
	_ = x[CCONT-29]
	_ = x[DCONT-30]
	_ = x[RCONT-31]
	_ = x[SCONT-32]
	_ = x[YIELD-33]
	_ = x[READ-34]
	_ = x[WRITE-35]
	_ = x[ATON-36]
	_ = x[TOA-37]
	_ = x[ERROR-38]
	_ = x[EXIT-39]
}

const _OpCode_name = "NOPPUSHPOPMOVADDSUBMULDIVMODNOTANDORLTGTLEGEEQNELSHRSHIX1IX2LENARRJMPJMPFFUNCCALLRETCCONTDCONTRCONTSCONTYIELDREADWRITEATONTOAERROREXIT"

var _OpCode_index = [...]uint8{0, 3, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34, 36, 38, 40, 42, 44, 46, 48, 51, 54, 57, 60, 63, 66, 69, 73, 77, 81, 84, 89, 94, 99, 104, 109, 113, 118, 122, 125, 130, 134}

func (i OpCode) String() string {
	if i >= OpCode(len(_OpCode_index)-1) {
		return "OpCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OpCode_name[_OpCode_index[i]:_OpCode_index[i+1]]
}
